schema {
  mutation: RootMutationType
  query: RootQueryType
}

type RootQueryType {
  getWallets: [Wallet]
  myWallet: Wallet
  getLoan(id: ID!): Loan
  getAllLoans: [Loan]
  getRequestedLoans: [Loan]
  getMyLoans: [Loan]
  getLoanContributions(id: ID!): [Contribution]
}

type RootMutationType {
  createWallet(amount: Decimal!, currency: String!): Wallet!
  loanRequest(amount: Decimal!, currency: String!, duration: Int!): Loan!
  loanApproval(loanId: ID!, interestRate: Decimal!): Loan!
  loanContribute(loanId: ID!, contributorId: String!, contributionAmount: Decimal!): Loan!
  signin(email: String, password: String): Session
}

type Session {
  token: String!
}

type Loan {
  id: ID!
  status: String!
  ownerId: String!
  amount: Decimal!
  currency: String!
  duration: Int!
  interestRate: Decimal
  title: String!
  description: String!
  contributions: [Contribution]
}

type Contribution {
  currency: String!
  contributorId: String!
  amount: Decimal!
}

type Wallet {
  id: ID!
  amount: Decimal!
  ownerId: String!
  currency: String!
  movements: [Movement]
}

type Movement {
  id: ID!
  amount: Decimal!
  insertedAt: Date!
}

"""
The `Date` scalar type represents a date. The Date appears in a JSON
response as an ISO8601 formatted string, without a time component.
"""
scalar Date

"""
The `Decimal` scalar type represents signed double-precision fractional
values parsed by the `Decimal` library. The Decimal appears in a JSON
response as a string to preserve precision.
"""
scalar Decimal
